{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.js","webpack:///webpack/bootstrap 8a3ff4d4e2b00bd07bce","webpack:///./~/babel-runtime/helpers/classCallCheck.js","webpack:///./~/babel-runtime/helpers/createClass.js","webpack:///./src/math/vector.ts","webpack:///./~/core-js/library/modules/_descriptors.js","webpack:///./src/math/index.ts","webpack:///./src/math/box.ts","webpack:///./~/core-js/library/modules/_is-object.js","webpack:///./src/collision/response.ts","webpack:///./src/math/polygon.ts","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/core-js/library/modules/_fails.js","webpack:///./~/core-js/library/modules/_global.js","webpack:///./~/core-js/library/modules/_object-dp.js","webpack:///./src/collision/util.ts","webpack:///./src/index.ts","webpack:///./src/math/circle.ts","webpack:///./~/babel-runtime/core-js/object/define-property.js","webpack:///./~/core-js/library/fn/object/define-property.js","webpack:///./~/core-js/library/modules/_a-function.js","webpack:///./~/core-js/library/modules/_an-object.js","webpack:///./~/core-js/library/modules/_ctx.js","webpack:///./~/core-js/library/modules/_dom-create.js","webpack:///./~/core-js/library/modules/_export.js","webpack:///./~/core-js/library/modules/_has.js","webpack:///./~/core-js/library/modules/_hide.js","webpack:///./~/core-js/library/modules/_ie8-dom-define.js","webpack:///./~/core-js/library/modules/_property-desc.js","webpack:///./~/core-js/library/modules/_to-primitive.js","webpack:///./~/core-js/library/modules/es6.object.define-property.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","default","instance","Constructor","TypeError","_defineProperty","_defineProperty2","obj","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","undefined","apply","_classCallCheck2","_createClass2","_interopRequireDefault","_classCallCheck3","_createClass3","Vector","x","arguments","y","other","angle","Math","cos","sin","len","xs","ys","amt","dot","len2","axis","project","scale","projectN","sqrt","a","_vector","_circle","_polygon","_box","Box","Polygon","Circle","_vector2","_circle2","_polygon2","_box2","pos","w","h","it","_index","Response","b","overlapN","overlapV","clear","aInB","bInA","overlap","Number","MAX_VALUE","points","offset","setPoints","calcPoints","edges","normals","push","_recalc","calcPoint","copy","rotate","p1","p2","e","sub","perp","normalize","xMin","yMin","xMax","yMax","point","clone","add","toPolygon","cx","cy","ar","core","version","__e","exec","window","self","Function","__g","anObject","IE8_DOM_DEFINE","toPrimitive","dP","f","O","P","Attributes","_math","_response","flattenPointsOn","normal","result","min","max","isSeparatingAxis","aPos","bPos","aPoints","bPoints","response","rangeA","T_ARRAYS","pop","rangeB","offsetV","T_VECTORS","projectedOffset","option1","option2","absOverlap","abs","reverse","voronoiRegion","line","dp","LEFT_VORONOI_REGION","RIGHT_VORONOI_REGION","MIDDLE_VORONOI_REGION","pointInCircle","differenceV","radiusSq","distanceSq","testPolygonPolygon","aLen","bLen","pointInPolygon","poly","TEST_POINT","T_RESPONSE","testCircleCircle","totalRadius","totalRadiusSq","dist","testPolygonCircle","polygon","circle","circlePos","radius","radius2","edge","next","prev","region","point2","distAbs","testCirclePolygon","_response2","_util","r","corner","$Object","desc","isObject","aFunction","fn","that","document","is","createElement","ctx","hide","has","$export","type","source","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","IS_BIND","B","IS_WRAP","W","expProto","C","virtual","R","U","createDesc","bitmap","val","toString","valueOf"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SAT-ts\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SAT-ts\"] = factory();\n\telse\n\t\troot[\"SAT-ts\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SAT-ts\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SAT-ts\"] = factory();\n\telse\n\t\troot[\"SAT-ts\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 14);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(16);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(0), __webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('babel-runtime/helpers/classCallCheck'), require('babel-runtime/helpers/createClass'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.classCallCheck, global.createClass);\n        global.vector = mod.exports;\n    }\n})(this, function (exports, _classCallCheck2, _createClass2) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\n    var _createClass3 = _interopRequireDefault(_createClass2);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    var Vector = function () {\n        function Vector() {\n            var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            (0, _classCallCheck3.default)(this, Vector);\n\n            this.x = x;\n            this.y = y;\n        }\n        // Copy the values of another Vector into this one.\n        /**\n          * @param {Vector} other The other Vector.\n          * @return {Vector} This for chaining.\n          */\n\n\n        (0, _createClass3.default)(Vector, [{\n            key: 'copy',\n            value: function copy(other) {\n                this.x = other.x;\n                this.y = other.y;\n                return this;\n            }\n        }, {\n            key: 'clone',\n            value: function clone() {\n                return new Vector(this.x, this.y);\n            }\n        }, {\n            key: 'perp',\n            value: function perp() {\n                var x = this.x;\n                this.x = this.y;\n                this.y = x;\n                return this;\n            }\n        }, {\n            key: 'rotate',\n            value: function rotate(angle) {\n                var x = this.x;\n                var y = this.y;\n                this.x = x * Math.cos(angle) - y * Math.sin(angle);\n                this.y = x * Math.sin(angle) + y * Math.cos(angle);\n                return this;\n            }\n        }, {\n            key: 'reverse',\n            value: function reverse() {\n                this.x = -this.x;\n                this.y = -this.y;\n                return this;\n            }\n        }, {\n            key: 'normalize',\n            value: function normalize() {\n                var d = this.len();\n                if (d > 0) {\n                    this.x = this.x / d;\n                    this.y = this.y / d;\n                }\n                ;\n                return this;\n            }\n        }, {\n            key: 'add',\n            value: function add(other) {\n                this.x += other.x;\n                this.y += other.y;\n                return this;\n            }\n        }, {\n            key: 'sub',\n            value: function sub(other) {\n                this.x -= other.x;\n                this.y -= other.y;\n                return this;\n            }\n        }, {\n            key: 'scale',\n            value: function scale(xs, ys) {\n                this['x'] *= xs;\n                this['y'] *= ys || xs;\n                return this;\n            }\n        }, {\n            key: 'project',\n            value: function project(other) {\n                var amt = this.dot(other) / other.len2();\n                this.x = amt * other.x;\n                this.y = amt * other.y;\n                return this;\n            }\n        }, {\n            key: 'projectN',\n            value: function projectN(other) {\n                var amt = this.dot(other);\n                this.x = amt * other.x;\n                this.y = amt * other.y;\n                return this;\n            }\n        }, {\n            key: 'reflect',\n            value: function reflect(axis) {\n                var x = this.x;\n                var y = this.y;\n                this.project(axis).scale(2);\n                this.x -= x;\n                this.y -= y;\n                return this;\n            }\n        }, {\n            key: 'reflectN',\n            value: function reflectN(axis) {\n                var x = this.x;\n                var y = this.y;\n                this.projectN(axis).scale(2);\n                this.x -= x;\n                this.y -= y;\n                return this;\n            }\n        }, {\n            key: 'dot',\n            value: function dot(other) {\n                return this.x * other.x + this.y * other.y;\n            }\n        }, {\n            key: 'len2',\n            value: function len2() {\n                return this.dot(this);\n            }\n        }, {\n            key: 'len',\n            value: function len() {\n                return Math.sqrt(this.len2());\n            }\n        }]);\n        return Vector;\n    }();\n\n    exports.default = Vector;\n\n    ;\n});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(10)(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(2), __webpack_require__(15), __webpack_require__(8), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('./vector'), require('./circle'), require('./polygon'), require('./box'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.vector, global.circle, global.polygon, global.box);\n    global.index = mod.exports;\n  }\n})(this, function (exports, _vector, _circle, _polygon, _box) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Box = exports.Polygon = exports.Circle = exports.Vector = undefined;\n\n  var _vector2 = _interopRequireDefault(_vector);\n\n  var _circle2 = _interopRequireDefault(_circle);\n\n  var _polygon2 = _interopRequireDefault(_polygon);\n\n  var _box2 = _interopRequireDefault(_box);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.Vector = _vector2.default;\n  exports.Circle = _circle2.default;\n  exports.Polygon = _polygon2.default;\n  exports.Box = _box2.default;\n});\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(0), __webpack_require__(1), __webpack_require__(2), __webpack_require__(8)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('babel-runtime/helpers/classCallCheck'), require('babel-runtime/helpers/createClass'), require('./vector'), require('./polygon'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.classCallCheck, global.createClass, global.vector, global.polygon);\n        global.box = mod.exports;\n    }\n})(this, function (exports, _classCallCheck2, _createClass2, _vector, _polygon) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\n    var _createClass3 = _interopRequireDefault(_createClass2);\n\n    var _vector2 = _interopRequireDefault(_vector);\n\n    var _polygon2 = _interopRequireDefault(_polygon);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    var Box = function () {\n        /**\n         * @param {Vector=} pos A vector representing the bottom-left of the box (i.e. the smallest x and smallest y value).\n         * @param {?number=} w The width of the box.\n         * @param {?number=} h The height of the box.\n         * @constructor\n         */\n        function Box() {\n            var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new _vector2.default();\n            var w = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var h = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n            (0, _classCallCheck3.default)(this, Box);\n\n            this.pos = pos;\n            this.w = w;\n            this.h = h;\n        }\n\n        (0, _createClass3.default)(Box, [{\n            key: 'toPolygon',\n            value: function toPolygon() {\n                var pos = this.pos;\n                var w = this.w;\n                var h = this.h;\n                return new _polygon2.default(new _vector2.default(pos.x, pos.y), [new _vector2.default(), new _vector2.default(w, 0), new _vector2.default(w, h), new _vector2.default(0, h)]);\n            }\n        }]);\n        return Box;\n    }();\n\n    exports.default = Box;\n\n    ;\n});\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(0), __webpack_require__(1), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require(\"babel-runtime/helpers/classCallCheck\"), require(\"babel-runtime/helpers/createClass\"), require(\"../math/index\"));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.classCallCheck, global.createClass, global.index);\n        global.response = mod.exports;\n    }\n})(this, function (exports, _classCallCheck2, _createClass2, _index) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\n    var _createClass3 = _interopRequireDefault(_createClass2);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    var Response = function () {\n        // ## Response\n        //\n        // An object representing the result of an intersection. Contains:\n        //  - The two objects participating in the intersection\n        //  - The vector representing the minimum change necessary to extract the first object\n        //    from the second one (as well as a unit vector in that direction and the magnitude\n        //    of the overlap)\n        //  - Whether the first object is entirely inside the second, and vice versa.\n        /**\n         * @constructor\n         */\n        function Response() {\n            (0, _classCallCheck3.default)(this, Response);\n\n            this.a = null;\n            this.b = null;\n            this.overlapN = new _index.Vector();\n            this.overlapV = new _index.Vector();\n            this.clear();\n        }\n\n        (0, _createClass3.default)(Response, [{\n            key: \"clear\",\n            value: function clear() {\n                this.aInB = true;\n                this.bInA = true;\n                this.overlap = Number.MAX_VALUE;\n            }\n        }]);\n        return Response;\n    }();\n\n    exports.default = Response;\n});\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(0), __webpack_require__(1), __webpack_require__(2), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('babel-runtime/helpers/classCallCheck'), require('babel-runtime/helpers/createClass'), require('./vector'), require('./box'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.classCallCheck, global.createClass, global.vector, global.box);\n        global.polygon = mod.exports;\n    }\n})(this, function (exports, _classCallCheck2, _createClass2, _vector, _box) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\n    var _createClass3 = _interopRequireDefault(_createClass2);\n\n    var _vector2 = _interopRequireDefault(_vector);\n\n    var _box2 = _interopRequireDefault(_box);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    var Polygon = function () {\n        function Polygon() {\n            var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new _vector2.default();\n            var points = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n            (0, _classCallCheck3.default)(this, Polygon);\n\n            this.pos = pos;\n            this.angle = 0;\n            this.offset = new _vector2.default();\n            this.setPoints(points);\n        }\n\n        (0, _createClass3.default)(Polygon, [{\n            key: 'setPoints',\n            value: function setPoints(points) {\n                var lengthChanged = !this['points'] || this.points.length !== points.length;\n                if (lengthChanged) {\n                    var i = void 0;\n                    var calcPoints = this.calcPoints = [];\n                    var edges = this.edges = [];\n                    var normals = this.normals = [];\n                    // Allocate the vector arrays for the calculated properties\n                    for (i = 0; i < points.length; i++) {\n                        calcPoints.push(new _vector2.default());\n                        edges.push(new _vector2.default());\n                        normals.push(new _vector2.default());\n                    }\n                    ;\n                }\n                ;\n                this.points = points;\n                this._recalc();\n                return this;\n            }\n        }, {\n            key: '_recalc',\n            value: function _recalc() {\n                var calcPoints = this.calcPoints;\n                var edges = this.edges;\n                var normals = this.normals;\n                var points = this.points;\n                var offset = this.offset;\n                var angle = this.angle;\n                var len = points.length;\n                var i = void 0;\n                for (i = 0; i < len; i++) {\n                    var calcPoint = calcPoints[i].copy(points[i]);\n                    calcPoint.x += offset.x;\n                    calcPoint.y += offset.y;\n                    if (angle !== 0) {\n                        calcPoint.rotate(angle);\n                    }\n                    ;\n                }\n                ;\n                for (i = 0; i < len; i++) {\n                    var p1 = calcPoints[i];\n                    var p2 = i < len - 1 ? calcPoints[i + 1] : calcPoints[0];\n                    var e = edges[i].copy(p2).sub(p1);\n                    normals[i].copy(e).perp().normalize();\n                }\n                ;\n                return this;\n            }\n        }, {\n            key: 'setAngle',\n            value: function setAngle(angle) {\n                this.angle = angle;\n                this._recalc();\n                return this;\n            }\n        }, {\n            key: 'setOffset',\n            value: function setOffset(offset) {\n                this.offset = offset;\n                this._recalc();\n                return this;\n            }\n        }, {\n            key: 'rotate',\n            value: function rotate(angle) {\n                var points = this.points;\n                var len = points.length;\n                for (var i = 0; i < len; i++) {\n                    points[i].rotate(angle);\n                }\n                ;\n                this._recalc();\n                return this;\n            }\n        }, {\n            key: 'translate',\n            value: function translate() {\n                var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n                var points = this.points;\n                var len = points.length;\n                for (var i = 0; i < len; i++) {\n                    points[i]['x'] += x;\n                    points[i]['y'] += y;\n                }\n                ;\n                this._recalc();\n                return this;\n            }\n        }, {\n            key: 'getAABB',\n            value: function getAABB() {\n                var points = this.calcPoints;\n                var len = points.length;\n                var xMin = points[0]['x'];\n                var yMin = points[0]['y'];\n                var xMax = xMin;\n                var yMax = yMin;\n                for (var i = 1; i < len; i++) {\n                    var point = points[i];\n                    if (point['x'] < xMin) {\n                        xMin = point['x'];\n                    } else if (point['x'] > xMax) {\n                        xMax = point['x'];\n                    } else if (point['y'] < yMin) {\n                        yMin = point['y'];\n                    } else if (point['y'] > yMax) {\n                        yMax = point['y'];\n                    }\n                    ;\n                }\n                ;\n                return new _box2.default(this[\"pos\"].clone().add(new _vector2.default(xMin, yMin)), xMax - xMin, yMax - yMin).toPolygon();\n            }\n        }, {\n            key: 'getCentroid',\n            value: function getCentroid() {\n                var points = this['calcPoints'];\n                var len = points.length;\n                var cx = 0;\n                var cy = 0;\n                var ar = 0;\n                for (var i = 0; i < len; i++) {\n                    var p1 = points[i];\n                    var p2 = i === len - 1 ? points[0] : points[i + 1];\n                    var a = p1['x'] * p2['y'] - p1['y'] * p2['x'];\n                    cx += (p1['x'] + p2['x']) * a;\n                    cy += (p1['y'] + p2['y']) * a;\n                    ar += a;\n                }\n                ;\n                ar = ar * 3;\n                cx = cx / ar;\n                cy = cy / ar;\n                return new _vector2.default(cx, cy);\n            }\n        }]);\n        return Polygon;\n    }();\n\n    exports.default = Polygon;\n\n    ;\n});\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = { version: '2.6.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(19);\nvar IE8_DOM_DEFINE = __webpack_require__(25);\nvar toPrimitive = __webpack_require__(27);\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(3) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(4), __webpack_require__(7)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('../math'), require('./response'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.math, global.response);\n        global.util = mod.exports;\n    }\n})(this, function (exports, _math, _response) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.isSeparatingAxis = isSeparatingAxis;\n    exports.pointInCircle = pointInCircle;\n    exports.testPolygonPolygon = testPolygonPolygon;\n    exports.pointInPolygon = pointInPolygon;\n    exports.testCircleCircle = testCircleCircle;\n    exports.testPolygonCircle = testPolygonCircle;\n    exports.testCirclePolygon = testCirclePolygon;\n\n    var _response2 = _interopRequireDefault(_response);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    // ## Object Pools\n    // A pool of `Vector` objects that are used in calculations to avoid\n    // allocating memory.\n    /**\n     * @type {Array.<Vector>}\n     */\n    var T_VECTORS = [];\n    for (var i = 0; i < 10; i++) {\n        T_VECTORS.push(new _math.Vector());\n    }\n    // A pool of arrays of numbers used in calculations to avoid allocating\n    // memory.\n    /**\n     * @type {Array.<Array.<number>>}\n     */\n    var T_ARRAYS = [];\n    for (var i = 0; i < 5; i++) {\n        T_ARRAYS.push([]);\n    }\n    // Temporary response used for polygon hit detection.\n    /**\n     * @type {Response}\n     */\n    var T_RESPONSE = new _response2.default();\n    // Tiny \"point\" polygon used for polygon hit detection.\n    /**\n     * @type {Polygon}\n     */\n    var TEST_POINT = new _math.Box(new _math.Vector(), 0.000001, 0.000001).toPolygon();\n    // ## Helper Functions\n    // Flattens the specified array of points onto a unit vector axis,\n    // resulting in a one dimensional range of the minimum and\n    // maximum value on that axis.\n    /**\n     * @param {Array.<Vector>} points The points to flatten.\n     * @param {Vector} normal The unit vector axis to flatten on.\n     * @param {Array.<number>} result An array.  After calling this function,\n     *   result[0] will be the minimum value,\n     *   result[1] will be the maximum value.\n     */\n    function flattenPointsOn(points, normal, result) {\n        var min = Number.MAX_VALUE;\n        var max = -Number.MAX_VALUE;\n        var len = points.length;\n        for (var i = 0; i < len; i++) {\n            // The magnitude of the projection of the point onto the normal\n            var dot = points[i].dot(normal);\n            if (dot < min) min = dot;\n            if (dot > max) max = dot;\n        }\n        ;\n        result[0] = min;\n        result[1] = max;\n    }\n    // Check whether two convex polygons are separated by the specified\n    // axis (must be a unit vector).\n    /**\n     * @param {Vector} aPos The position of the first polygon.\n     * @param {Vector} bPos The position of the second polygon.\n     * @param {Array.<Vector>} aPoints The points in the first polygon.\n     * @param {Array.<Vector>} bPoints The points in the second polygon.\n     * @param {Vector} axis The axis (unit sized) to test against.  The points of both polygons\n     *   will be projected onto this axis.\n     * @param {Response=} response A Response object (optional) which will be populated\n     *   if the axis is not a separating axis.\n     * @return {boolean} true if it is a separating axis, false otherwise.  If false,\n     *   and a response is passed in, information about how much overlap and\n     *   the direction of the overlap will be populated.\n     */\n    function isSeparatingAxis(aPos, bPos, aPoints, bPoints, axis, response) {\n        var rangeA = T_ARRAYS.pop();\n        var rangeB = T_ARRAYS.pop();\n        // The magnitude of the offset between the two polygons\n        var offsetV = T_VECTORS.pop().copy(bPos).sub(aPos);\n        var projectedOffset = offsetV.dot(axis);\n        // Project the polygons onto the axis.\n        flattenPointsOn(aPoints, axis, rangeA);\n        flattenPointsOn(bPoints, axis, rangeB);\n        // Move B's range to its position relative to A.\n        rangeB[0] += projectedOffset;\n        rangeB[1] += projectedOffset;\n        if (rangeA[0] > rangeB[1] || rangeB[0] > rangeA[1]) {\n            T_VECTORS.push(offsetV);\n            T_ARRAYS.push(rangeA);\n            T_ARRAYS.push(rangeB);\n            return true;\n        }\n        ;\n        // This is not a separating axis. If we're calculating a response, calculate the overlap.\n        if (response) {\n            var overlap = 0;\n            // A starts further left than B\n            if (rangeA[0] < rangeB[0]) {\n                response['aInB'] = false;\n                // A ends before B does. We have to pull A out of B\n                if (rangeA[1] < rangeB[1]) {\n                    overlap = rangeA[1] - rangeB[0];\n                    response['bInA'] = false;\n                    // B is fully inside A.  Pick the shortest way out.\n                } else {\n                    var _option = rangeA[1] - rangeB[0];\n                    var _option2 = rangeB[1] - rangeA[0];\n                    overlap = _option < _option2 ? _option : -_option2;\n                }\n            } else {\n                response['bInA'] = false;\n                // B ends before A ends. We have to push A out of B\n                if (rangeA[1] > rangeB[1]) {\n                    overlap = rangeA[0] - rangeB[1];\n                    response['aInB'] = false;\n                } else {\n                    // A is fully inside B.  Pick the shortest way out.\n                    var option1 = rangeA[1] - rangeB[0];\n                    var option2 = rangeB[1] - rangeA[0];\n                    overlap = option1 < option2 ? option1 : -option2;\n                }\n                ;\n            }\n            // If this is the smallest amount of overlap we've seen so far, set it as the minimum overlap.\n            var absOverlap = Math.abs(overlap);\n            if (absOverlap < response['overlap']) {\n                response['overlap'] = absOverlap;\n                response['overlapN'].copy(axis);\n                if (overlap < 0) {\n                    response['overlapN'].reverse();\n                }\n                ;\n            }\n            ;\n        }\n        ;\n        T_VECTORS.push(offsetV);\n        T_ARRAYS.push(rangeA);\n        T_ARRAYS.push(rangeB);\n        return false;\n    }\n    ;\n    // Constants for Voronoi regions\n    /**\n     * @const\n     */\n    var LEFT_VORONOI_REGION = -1;\n    /**\n     * @const\n     */\n    var MIDDLE_VORONOI_REGION = 0;\n    /**\n     * @const\n     */\n    var RIGHT_VORONOI_REGION = 1;\n    // Calculates which Voronoi region a point is on a line segment.\n    // It is assumed that both the line and the point are relative to `(0,0)`\n    //\n    //            |       (0)      |\n    //     (-1)  [S]--------------[E]  (1)\n    //            |       (0)      |\n    /**\n     * @param {Vector} line The line segment.\n     * @param {Vector} point The point.\n     * @return  {number} LEFT_VORONOI_REGION (-1) if it is the left region,\n     *          MIDDLE_VORONOI_REGION (0) if it is the middle region,\n     *          RIGHT_VORONOI_REGION (1) if it is the right region.\n     */\n    function voronoiRegion(line, point) {\n        var len2 = line.len2();\n        var dp = point.dot(line);\n        // If the point is beyond the start of the line, it is in the\n        // left voronoi region.\n        if (dp < 0) {\n            return LEFT_VORONOI_REGION;\n            // If the point is beyond the end of the line, it is in the\n            // right voronoi region.\n        } else if (dp > len2) {\n            return RIGHT_VORONOI_REGION;\n            // Otherwise, it's in the middle one.\n        } else {\n            return MIDDLE_VORONOI_REGION;\n        }\n    }\n    ;\n    // ## Collision Tests\n    // Check if a point is inside a circle.\n    /**\n     * @param {Vector} p The point to test.\n     * @param {Circle} c The circle to test.\n     * @return {boolean} true if the point is inside the circle, false if it is not.\n     */\n    function pointInCircle(p, c) {\n        var differenceV = T_VECTORS.pop().copy(p).sub(c['pos']);\n        var radiusSq = c['r'] * c['r'];\n        var distanceSq = differenceV.len2();\n        T_VECTORS.push(differenceV);\n        // If the distance between is smaller than the radius then the point is inside the circle.\n        return distanceSq <= radiusSq;\n    }\n    // Checks whether polygons collide.\n    /**\n     * @param {Polygon} a The first polygon.\n     * @param {Polygon} b The second polygon.\n     * @param {Response=} response Response object (optional) that will be populated if\n     *   they interset.\n     * @return {boolean} true if they intersect, false if they don't.\n     */\n    function testPolygonPolygon(a, b, response) {\n        var aPoints = a['calcPoints'];\n        var aLen = aPoints.length;\n        var bPoints = b['calcPoints'];\n        var bLen = bPoints.length;\n        // If any of the edge normals of A is a separating axis, no intersection.\n        for (var _i = 0; _i < aLen; _i++) {\n            if (isSeparatingAxis(a['pos'], b['pos'], aPoints, bPoints, a['normals'][_i], response)) {\n                return false;\n            }\n            ;\n        }\n        ;\n        for (var _i2 = 0; _i2 < bLen; _i2++) {\n            if (isSeparatingAxis(a['pos'], b['pos'], aPoints, bPoints, b['normals'][_i2], response)) {\n                return false;\n            }\n            ;\n        }\n        ;\n        // Since none of the edge normals of A or B are a separating axis, there is an intersection\n        // and we've already calculated the smallest overlap (in isSeparatingAxis).  Calculate the\n        // final overlap vector.\n        if (response) {\n            response['a'] = a;\n            response['b'] = b;\n            response['overlapV'].copy(response['overlapN']).scale(response['overlap']);\n        }\n        return true;\n    }\n    // Check if a point is inside a convex polygon.\n    /**\n     * @param {Vector} p The point to test.\n     * @param {Polygon} poly The polygon to test.\n     * @return {boolean} true if the point is inside the polygon, false if it is not.\n     */\n    function pointInPolygon(p, poly) {\n        TEST_POINT['pos'].copy(p);\n        T_RESPONSE.clear();\n        var result = testPolygonPolygon(TEST_POINT, poly, T_RESPONSE);\n        if (result) {\n            result = T_RESPONSE['aInB'];\n        }\n        ;\n        return result;\n    }\n    // Check if two circles collide.\n    /**\n     * @param {Circle} a The first circle.\n     * @param {Circle} b The second circle.\n     * @param {Response=} response Response object (optional) that will be populated if\n     *   the circles intersect.\n     * @return {boolean} true if the circles intersect, false if they don't.\n     */\n    function testCircleCircle(a, b, response) {\n        // Check if the distance between the centers of the two\n        // circles is greater than their combined radius.\n        var differenceV = T_VECTORS.pop().copy(b['pos']).sub(a['pos']);\n        var totalRadius = a['r'] + b['r'];\n        var totalRadiusSq = totalRadius * totalRadius;\n        var distanceSq = differenceV.len2();\n        // If the distance is bigger than the combined radius, they don't intersect.\n        if (distanceSq > totalRadiusSq) {\n            T_VECTORS.push(differenceV);\n            return false;\n        }\n        // They intersect.  If we're calculating a response, calculate the overlap.\n        if (response) {\n            var dist = Math.sqrt(distanceSq);\n            response['a'] = a;\n            response['b'] = b;\n            response['overlap'] = totalRadius - dist;\n            response['overlapN'].copy(differenceV.normalize());\n            response['overlapV'].copy(differenceV).scale(response['overlap']);\n            response['aInB'] = a['r'] <= b['r'] && dist <= b['r'] - a['r'];\n            response['bInA'] = b['r'] <= a['r'] && dist <= a['r'] - b['r'];\n        }\n        T_VECTORS.push(differenceV);\n        return true;\n    }\n    // Check if a polygon and a circle collide.\n    /**\n     * @param {Polygon} polygon The polygon.\n     * @param {Circle} circle The circle.\n     * @param {Response=} response Response object (optional) that will be populated if\n     *   they interset.\n     * @return {boolean} true if they intersect, false if they don't.\n     */\n    function testPolygonCircle(polygon, circle, response) {\n        // Get the position of the circle relative to the polygon.\n        var circlePos = T_VECTORS.pop().copy(circle['pos']).sub(polygon['pos']);\n        var radius = circle['r'];\n        var radius2 = radius * radius;\n        var points = polygon['calcPoints'];\n        var len = points.length;\n        var edge = T_VECTORS.pop();\n        var point = T_VECTORS.pop();\n        // For each edge in the polygon:\n        for (var _i3 = 0; _i3 < len; _i3++) {\n            var next = _i3 === len - 1 ? 0 : _i3 + 1;\n            var prev = _i3 === 0 ? len - 1 : _i3 - 1;\n            var overlap = 0;\n            var overlapN = null;\n            // Get the edge.\n            edge.copy(polygon['edges'][_i3]);\n            // Calculate the center of the circle relative to the starting point of the edge.\n            point.copy(circlePos).sub(points[_i3]);\n            // If the distance between the center of the circle and the point\n            // is bigger than the radius, the polygon is definitely not fully in\n            // the circle.\n            if (response && point.len2() > radius2) {\n                response['aInB'] = false;\n            }\n            // Calculate which Voronoi region the center of the circle is in.\n            var region = voronoiRegion(edge, point);\n            // If it's the left region:\n            if (region === LEFT_VORONOI_REGION) {\n                // We need to make sure we're in the RIGHT_VORONOI_REGION of the previous edge.\n                edge.copy(polygon['edges'][prev]);\n                // Calculate the center of the circle relative the starting point of the previous edge\n                var point2 = T_VECTORS.pop().copy(circlePos).sub(points[prev]);\n                region = voronoiRegion(edge, point2);\n                if (region === RIGHT_VORONOI_REGION) {\n                    // It's in the region we want.  Check if the circle intersects the point.\n                    var dist = point.len();\n                    if (dist > radius) {\n                        // No intersection\n                        T_VECTORS.push(circlePos);\n                        T_VECTORS.push(edge);\n                        T_VECTORS.push(point);\n                        T_VECTORS.push(point2);\n                        return false;\n                    } else if (response) {\n                        // It intersects, calculate the overlap.\n                        response['bInA'] = false;\n                        overlapN = point.normalize();\n                        overlap = radius - dist;\n                    }\n                }\n                T_VECTORS.push(point2);\n                // If it's the right region:\n            } else if (region === RIGHT_VORONOI_REGION) {\n                // We need to make sure we're in the left region on the next edge\n                edge.copy(polygon['edges'][next]);\n                // Calculate the center of the circle relative to the starting point of the next edge.\n                point.copy(circlePos).sub(points[next]);\n                region = voronoiRegion(edge, point);\n                if (region === LEFT_VORONOI_REGION) {\n                    // It's in the region we want.  Check if the circle intersects the point.\n                    var dist = point.len();\n                    if (dist > radius) {\n                        // No intersection\n                        T_VECTORS.push(circlePos);\n                        T_VECTORS.push(edge);\n                        T_VECTORS.push(point);\n                        return false;\n                    } else if (response) {\n                        // It intersects, calculate the overlap.\n                        response['bInA'] = false;\n                        overlapN = point.normalize();\n                        overlap = radius - dist;\n                    }\n                }\n                // Otherwise, it's the middle region:\n            } else {\n                // Need to check if the circle is intersecting the edge,\n                // Change the edge into its \"edge normal\".\n                var normal = edge.perp().normalize();\n                // Find the perpendicular distance between the center of the\n                // circle and the edge.\n                var dist = point.dot(normal);\n                var distAbs = Math.abs(dist);\n                // If the circle is on the outside of the edge, there is no intersection.\n                if (dist > 0 && distAbs > radius) {\n                    // No intersection\n                    T_VECTORS.push(circlePos);\n                    T_VECTORS.push(normal);\n                    T_VECTORS.push(point);\n                    return false;\n                } else if (response) {\n                    // It intersects, calculate the overlap.\n                    overlapN = normal;\n                    overlap = radius - dist;\n                    // If the center of the circle is on the outside of the edge, or part of the\n                    // circle is on the outside, the circle is not fully inside the polygon.\n                    if (dist >= 0 || overlap < 2 * radius) {\n                        response['bInA'] = false;\n                    }\n                }\n            }\n            // If this is the smallest overlap we've seen, keep it.\n            // (overlapN may be null if the circle was in the wrong Voronoi region).\n            if (overlapN && response && Math.abs(overlap) < Math.abs(response['overlap'])) {\n                response['overlap'] = overlap;\n                response['overlapN'].copy(overlapN);\n            }\n        }\n        // Calculate the final overlap vector - based on the smallest overlap.\n        if (response) {\n            response['a'] = polygon;\n            response['b'] = circle;\n            response['overlapV'].copy(response['overlapN']).scale(response['overlap']);\n        }\n        T_VECTORS.push(circlePos);\n        T_VECTORS.push(edge);\n        T_VECTORS.push(point);\n        return true;\n    }\n    // Check if a circle and a polygon collide.\n    //\n    // **NOTE:** This is slightly less efficient than polygonCircle as it just\n    // runs polygonCircle and reverses everything at the end.\n    /**\n     * @param {Circle} circle The circle.\n     * @param {Polygon} polygon The polygon.\n     * @param {Response=} response Response object (optional) that will be populated if\n     *   they interset.\n     * @return {boolean} true if they intersect, false if they don't.\n     */\n    function testCirclePolygon(circle, polygon, response) {\n        // Test the polygon against the circle.\n        var result = testPolygonCircle(polygon, circle, response);\n        if (result && response) {\n            // Swap A and B in the response.\n            var a = response['a'];\n            var aInB = response['aInB'];\n            response['overlapN'].reverse();\n            response['overlapV'].reverse();\n            response['a'] = response['b'];\n            response['b'] = a;\n            response['aInB'] = response['bInA'];\n            response['bInA'] = aInB;\n        }\n        return result;\n    }\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(4), __webpack_require__(7), __webpack_require__(13)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('./math'), require('./collision/response'), require('./collision/util'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.math, global.response, global.util);\n    global.index = mod.exports;\n  }\n})(this, function (exports, _math, _response, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.testCirclePolygon = exports.testPolygonPolygon = exports.testPolygonCircle = exports.testCircleCircle = exports.Response = exports.Polygon = exports.Circle = exports.Vector = exports.Box = undefined;\n\n  var _response2 = _interopRequireDefault(_response);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.Box = _math.Box;\n  exports.Vector = _math.Vector;\n  exports.Circle = _math.Circle;\n  exports.Polygon = _math.Polygon;\n  exports.Response = _response2.default;\n  exports.testCircleCircle = _util.testCircleCircle;\n  exports.testPolygonCircle = _util.testPolygonCircle;\n  exports.testPolygonPolygon = _util.testPolygonPolygon;\n  exports.testCirclePolygon = _util.testCirclePolygon;\n});\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(0), __webpack_require__(1), __webpack_require__(2), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('babel-runtime/helpers/classCallCheck'), require('babel-runtime/helpers/createClass'), require('./vector'), require('./box'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.classCallCheck, global.createClass, global.vector, global.box);\n        global.circle = mod.exports;\n    }\n})(this, function (exports, _classCallCheck2, _createClass2, _vector, _box) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\n    var _createClass3 = _interopRequireDefault(_createClass2);\n\n    var _vector2 = _interopRequireDefault(_vector);\n\n    var _box2 = _interopRequireDefault(_box);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    var Circle = function () {\n        // ## Circle\n        //\n        // Represents a circle with a position and a radius.\n        // Create a new circle, optionally passing in a position and/or radius. If no position\n        // is given, the circle will be at `(0,0)`. If no radius is provided, the circle will\n        // have a radius of `0`.\n        /**\n         * @param {Vector=} pos A vector representing the position of the center of the circle\n         * @param {?number=} r The radius of the circle\n         * @constructor\n         */\n        function Circle() {\n            var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new _vector2.default();\n            var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            (0, _classCallCheck3.default)(this, Circle);\n\n            this.pos = pos;\n            this.r = r;\n        }\n\n        (0, _createClass3.default)(Circle, [{\n            key: 'getAABB',\n            value: function getAABB() {\n                var r = this.r;\n                var corner = this.pos.clone().sub(new _vector2.default(r, r));\n                return new _box2.default(corner, r * 2, r * 2).toPolygon();\n            }\n        }]);\n        return Circle;\n    }();\n\n    exports.default = Circle;\n\n    ;\n});\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(17), __esModule: true };\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(28);\nvar $Object = __webpack_require__(9).Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(6);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(18);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(6);\nvar document = __webpack_require__(11).document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(11);\nvar core = __webpack_require__(9);\nvar ctx = __webpack_require__(20);\nvar hide = __webpack_require__(24);\nvar has = __webpack_require__(23);\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(12);\nvar createDesc = __webpack_require__(26);\nmodule.exports = __webpack_require__(3) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(3) && !__webpack_require__(10)(function () {\n  return Object.defineProperty(__webpack_require__(21)('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(6);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(22);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(3), 'Object', { defineProperty: __webpack_require__(12).f });\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8a3ff4d4e2b00bd07bce","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/classCallCheck.js\n// module id = 0\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/createClass.js\n// module id = 1\n// module chunks = 0","export default class Vector {\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    // Copy the values of another Vector into this one.\n    /**\n      * @param {Vector} other The other Vector.\n      * @return {Vector} This for chaining.\n      */\n    copy(other) {\n        this.x = other.x;\n        this.y = other.y;\n        return this;\n    }\n    // Create a new vector with the same coordinates as this on.\n    /**\n     * @return {Vector} The new cloned vector\n     */\n    clone() {\n        return new Vector(this.x, this.y);\n    }\n    // Change this vector to be perpendicular to what it was before. (Effectively\n    // roatates it 90 degrees in a clockwise direction)\n    /**\n     * @return {Vector} This for chaining.\n     */\n    perp() {\n        var x = this.x;\n        this.x = this.y;\n        this.y = x;\n        return this;\n    }\n    // Rotate this vector (counter-clockwise) by the specified angle (in radians).\n    /**\n     * @param {number} angle The angle to rotate (in radians)\n     * @return {Vector} This for chaining.\n     */\n    rotate(angle) {\n        var x = this.x;\n        var y = this.y;\n        this.x = x * Math.cos(angle) - y * Math.sin(angle);\n        this.y = x * Math.sin(angle) + y * Math.cos(angle);\n        return this;\n    }\n    ;\n    // Reverse this vector.\n    /**\n     * @return {Vector} This for chaining.\n     */\n    reverse() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n    ;\n    // Normalize this vector.  (make it have length of `1`)\n    /**\n     * @return {Vector} This for chaining.\n     */\n    normalize() {\n        let d = this.len();\n        if (d > 0) {\n            this.x = this.x / d;\n            this.y = this.y / d;\n        }\n        ;\n        return this;\n    }\n    ;\n    // Add another vector to this one.\n    /**\n     * @param {Vector} other The other Vector.\n     * @return {Vector} This for chaining.\n     */\n    add(other) {\n        this.x += other.x;\n        this.y += other.y;\n        return this;\n    }\n    ;\n    // Subtract another vector from this one.\n    /**\n     * @param {Vector} other The other Vector.\n     * @return {Vector} This for chaiing.\n     */\n    sub(other) {\n        this.x -= other.x;\n        this.y -= other.y;\n        return this;\n    }\n    ;\n    // Scale this vector. An independant scaling factor can be provided\n    // for each axis, or a single scaling factor that will scale both `x` and `y`.\n    /**\n     * @param {number} x The scaling factor in the x direction.\n     * @param {?number=} y The scaling factor in the y direction.  If this\n     *   is not specified, the x scaling factor will be used.\n     * @return {Vector} This for chaining.\n     */\n    scale(xs, ys) {\n        this['x'] *= xs;\n        this['y'] *= ys || xs;\n        return this;\n    }\n    ;\n    // Project this vector on to another vector.\n    /**\n     * @param {Vector} other The vector to project onto.\n     * @return {Vector} This for chaining.\n     */\n    project(other) {\n        let amt = this.dot(other) / other.len2();\n        this.x = amt * other.x;\n        this.y = amt * other.y;\n        return this;\n    }\n    ;\n    // Project this vector onto a vector of unit length. This is slightly more efficient\n    // than `project` when dealing with unit vectors.\n    /**\n     * @param {Vector} other The unit vector to project onto.\n     * @return {Vector} This for chaining.\n     */\n    projectN(other) {\n        var amt = this.dot(other);\n        this.x = amt * other.x;\n        this.y = amt * other.y;\n        return this;\n    }\n    ;\n    // Reflect this vector on an arbitrary axis.\n    /**\n     * @param {Vector} axis The vector representing the axis.\n     * @return {Vector} This for chaining.\n     */\n    reflect(axis) {\n        var x = this.x;\n        var y = this.y;\n        this.project(axis).scale(2);\n        this.x -= x;\n        this.y -= y;\n        return this;\n    }\n    ;\n    // Reflect this vector on an arbitrary axis (represented by a unit vector). This is\n    // slightly more efficient than `reflect` when dealing with an axis that is a unit vector.\n    /**\n     * @param {Vector} axis The unit vector representing the axis.\n     * @return {Vector} This for chaining.\n     */\n    reflectN(axis) {\n        var x = this.x;\n        var y = this.y;\n        this.projectN(axis).scale(2);\n        this.x -= x;\n        this.y -= y;\n        return this;\n    }\n    ;\n    // Get the dot product of this vector and another.\n    /**\n     * @param {Vector}  other The vector to dot this one against.\n     * @return {number} The dot product.\n     */\n    dot(other) {\n        return this.x * other.x + this.y * other.y;\n    }\n    ;\n    // Get the squared length of this vector.\n    /**\n     * @return {number} The length^2 of this vector.\n     */\n    len2() {\n        return this.dot(this);\n    }\n    ;\n    // Get the length of this vector.\n    /**\n     * @return {number} The length of this vector.\n     */\n    len() {\n        return Math.sqrt(this.len2());\n    }\n    ;\n}\n;\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/vector.ts","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_descriptors.js\n// module id = 3\n// module chunks = 0","import Vector from './vector';\nimport Circle from './circle';\nimport Polygon from './polygon';\nimport Box from './box';\nexport { Vector };\nexport { Circle };\nexport { Polygon };\nexport { Box };\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/index.ts","import Vector from './vector';\nimport Polygon from './polygon';\n// ## Box\n//\n// Represents an axis-aligned box, with a width and height.\n// Create a new box, with the specified position, width, and height. If no position\n// is given, the position will be `(0,0)`. If no width or height are given, they will\n// be set to `0`.\nexport default class Box {\n    /**\n     * @param {Vector=} pos A vector representing the bottom-left of the box (i.e. the smallest x and smallest y value).\n     * @param {?number=} w The width of the box.\n     * @param {?number=} h The height of the box.\n     * @constructor\n     */\n    constructor(pos = new Vector(), w = 0, h = 0) {\n        this.pos = pos;\n        this.w = w;\n        this.h = h;\n    }\n    ;\n    // Returns a polygon whose edges are the same as this box.\n    /**\n     * @return {Polygon} A new Polygon that represents this box.\n     */\n    toPolygon() {\n        let pos = this.pos;\n        let w = this.w;\n        let h = this.h;\n        return new Polygon(new Vector(pos.x, pos.y), [\n            new Vector(), new Vector(w, 0),\n            new Vector(w, h), new Vector(0, h)\n        ]);\n    }\n    ;\n}\n;\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/box.ts","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-object.js\n// module id = 6\n// module chunks = 0","import { Vector } from \"../math/index\";\nexport default class Response {\n    // ## Response\n    //\n    // An object representing the result of an intersection. Contains:\n    //  - The two objects participating in the intersection\n    //  - The vector representing the minimum change necessary to extract the first object\n    //    from the second one (as well as a unit vector in that direction and the magnitude\n    //    of the overlap)\n    //  - Whether the first object is entirely inside the second, and vice versa.\n    /**\n     * @constructor\n     */\n    constructor() {\n        this.a = null;\n        this.b = null;\n        this.overlapN = new Vector();\n        this.overlapV = new Vector();\n        this.clear();\n    }\n    ;\n    clear() {\n        this.aInB = true;\n        this.bInA = true;\n        this.overlap = Number.MAX_VALUE;\n    }\n    ;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/collision/response.ts","// ## Polygon\n//\n// Represents a *convex* polygon with any number of points (specified in counter-clockwise order)\n//\n// Note: Do _not_ manually change the `points`, `angle`, or `offset` properties. Use the\n// provided setters. Otherwise the calculated properties will not be updated correctly.\n//\n// `pos` can be changed directly.\n// Create a new polygon, passing in a position vector, and an array of points (represented\n// by vectors relative to the position vector). If no position is passed in, the position\n// of the polygon will be `(0,0)`.\n/**\n * @param {Vector=} pos A vector representing the origin of the polygon. (all other\n *   points are relative to this one)\n * @param {Array.<Vector>=} points An array of vectors representing the points in the polygon,\n *   in counter-clockwise order.\n * @constructor\n */\nimport Vector from './vector';\nimport Box from './box';\nexport default class Polygon {\n    constructor(pos = new Vector(), points = []) {\n        this.pos = pos;\n        this.angle = 0;\n        this.offset = new Vector();\n        this.setPoints(points);\n    }\n    ;\n    // Set the points of the polygon.\n    //\n    // Note: The points are counter-clockwise *with respect to the coordinate system*.\n    // If you directly draw the points on a screen that has the origin at the top-left corner\n    // it will _appear_ visually that the points are being specified clockwise. This is just\n    // because of the inversion of the Y-axis when being displayed.\n    /**\n     * @param {Array.<Vector>=} points An array of vectors representing the points in the polygon,\n     *   in counter-clockwise order.\n     * @return {Polygon} This for chaining.\n     */\n    setPoints(points) {\n        let lengthChanged = !this['points'] || this.points.length !== points.length;\n        if (lengthChanged) {\n            let i;\n            let calcPoints = this.calcPoints = [];\n            let edges = this.edges = [];\n            let normals = this.normals = [];\n            // Allocate the vector arrays for the calculated properties\n            for (i = 0; i < points.length; i++) {\n                calcPoints.push(new Vector());\n                edges.push(new Vector());\n                normals.push(new Vector());\n            }\n            ;\n        }\n        ;\n        this.points = points;\n        this._recalc();\n        return this;\n    }\n    ;\n    // Computes the calculated collision polygon. Applies the `angle` and `offset` to the original points then recalculates the\n    // edges and normals of the collision polygon.\n    /**\n     * @return {Polygon} This for chaining.\n     */\n    _recalc() {\n        let calcPoints = this.calcPoints;\n        let edges = this.edges;\n        let normals = this.normals;\n        let points = this.points;\n        let offset = this.offset;\n        let angle = this.angle;\n        let len = points.length;\n        let i;\n        for (i = 0; i < len; i++) {\n            let calcPoint = calcPoints[i].copy(points[i]);\n            calcPoint.x += offset.x;\n            calcPoint.y += offset.y;\n            if (angle !== 0) {\n                calcPoint.rotate(angle);\n            }\n            ;\n        }\n        ;\n        for (i = 0; i < len; i++) {\n            let p1 = calcPoints[i];\n            let p2 = i < len - 1 ? calcPoints[i + 1] : calcPoints[0];\n            let e = edges[i].copy(p2).sub(p1);\n            normals[i].copy(e).perp().normalize();\n        }\n        ;\n        return this;\n    }\n    ;\n    // Set the current rotation angle of the polygon.\n    /**\n     * @param {number} angle The current rotation angle (in radians).\n     * @return {Polygon} This for chaining.\n     */\n    setAngle(angle) {\n        this.angle = angle;\n        this._recalc();\n        return this;\n    }\n    ;\n    // Set the current offset to apply to the `points` before applying the `angle` rotation.\n    /**\n     * @param {Vector} offset The new offset vector.\n     * @return {Polygon} This for chaining.\n     */\n    setOffset(offset) {\n        this.offset = offset;\n        this._recalc();\n        return this;\n    }\n    ;\n    // Rotates this polygon counter-clockwise around the origin of *its local coordinate system* (i.e. `pos`).\n    //\n    // Note: This changes the **original** points (so any `angle` will be applied on top of this rotation).\n    /**\n     * @param {number} angle The angle to rotate (in radians)\n     * @return {Polygon} This for chaining.\n     */\n    rotate(angle) {\n        let points = this.points;\n        let len = points.length;\n        for (var i = 0; i < len; i++) {\n            points[i].rotate(angle);\n        }\n        ;\n        this._recalc();\n        return this;\n    }\n    ;\n    // Translates the points of this polygon by a specified amount relative to the origin of *its own coordinate\n    // system* (i.e. `pos`).\n    //\n    // This is most useful to change the \"center point\" of a polygon. If you just want to move the whole polygon, change\n    // the coordinates of `pos`.\n    //\n    // Note: This changes the **original** points (so any `offset` will be applied on top of this translation)\n    /**\n     * @param {number} x The horizontal amount to translate.\n     * @param {number} y The vertical amount to translate.\n     * @return {Polygon} This for chaining.\n     */\n    translate(x = 0, y = 0) {\n        let points = this.points;\n        let len = points.length;\n        for (var i = 0; i < len; i++) {\n            points[i]['x'] += x;\n            points[i]['y'] += y;\n        }\n        ;\n        this._recalc();\n        return this;\n    }\n    ;\n    // Compute the axis-aligned bounding box. Any current state\n    // (translations/rotations) will be applied before constructing the AABB.\n    //\n    // Note: Returns a _new_ `Polygon` each time you call this.\n    /**\n     * @return {Polygon} The AABB\n     */\n    getAABB() {\n        let points = this.calcPoints;\n        let len = points.length;\n        let xMin = points[0]['x'];\n        let yMin = points[0]['y'];\n        let xMax = xMin;\n        let yMax = yMin;\n        for (var i = 1; i < len; i++) {\n            let point = points[i];\n            if (point['x'] < xMin) {\n                xMin = point['x'];\n            }\n            else if (point['x'] > xMax) {\n                xMax = point['x'];\n            }\n            else if (point['y'] < yMin) {\n                yMin = point['y'];\n            }\n            else if (point['y'] > yMax) {\n                yMax = point['y'];\n            }\n            ;\n        }\n        ;\n        return new Box(this[\"pos\"].clone().add(new Vector(xMin, yMin)), xMax - xMin, yMax - yMin).toPolygon();\n    }\n    ;\n    // Compute the centroid (geometric center) of the polygon. Any current state\n    // (translations/rotations) will be applied before computing the centroid.\n    //\n    // See https://en.wikipedia.org/wiki/Centroid#Centroid_of_a_polygon\n    //\n    // Note: Returns a _new_ `Vector` each time you call this.\n    /**\n     * @return {Vector} A Vector that contains the coordinates of the Centroid.\n     */\n    getCentroid() {\n        let points = this['calcPoints'];\n        let len = points.length;\n        let cx = 0;\n        let cy = 0;\n        let ar = 0;\n        for (var i = 0; i < len; i++) {\n            let p1 = points[i];\n            let p2 = i === len - 1 ? points[0] : points[i + 1];\n            var a = p1['x'] * p2['y'] - p1['y'] * p2['x'];\n            cx += (p1['x'] + p2['x']) * a;\n            cy += (p1['y'] + p2['y']) * a;\n            ar += a;\n        }\n        ;\n        ar = ar * 3;\n        cx = cx / ar;\n        cy = cy / ar;\n        return new Vector(cx, cy);\n    }\n    ;\n}\n;\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/polygon.ts","var core = module.exports = { version: '2.6.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_core.js\n// module id = 9\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_fails.js\n// module id = 10\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_global.js\n// module id = 11\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-dp.js\n// module id = 12\n// module chunks = 0","import { Vector, Box } from '../math';\nimport Response from './response';\n// ## Object Pools\n// A pool of `Vector` objects that are used in calculations to avoid\n// allocating memory.\n/**\n * @type {Array.<Vector>}\n */\nlet T_VECTORS = [];\nfor (var i = 0; i < 10; i++) {\n    T_VECTORS.push(new Vector());\n}\n// A pool of arrays of numbers used in calculations to avoid allocating\n// memory.\n/**\n * @type {Array.<Array.<number>>}\n */\nlet T_ARRAYS = [];\nfor (var i = 0; i < 5; i++) {\n    T_ARRAYS.push([]);\n}\n// Temporary response used for polygon hit detection.\n/**\n * @type {Response}\n */\nlet T_RESPONSE = new Response();\n// Tiny \"point\" polygon used for polygon hit detection.\n/**\n * @type {Polygon}\n */\nlet TEST_POINT = new Box(new Vector(), 0.000001, 0.000001).toPolygon();\n// ## Helper Functions\n// Flattens the specified array of points onto a unit vector axis,\n// resulting in a one dimensional range of the minimum and\n// maximum value on that axis.\n/**\n * @param {Array.<Vector>} points The points to flatten.\n * @param {Vector} normal The unit vector axis to flatten on.\n * @param {Array.<number>} result An array.  After calling this function,\n *   result[0] will be the minimum value,\n *   result[1] will be the maximum value.\n */\nfunction flattenPointsOn(points, normal, result) {\n    let min = Number.MAX_VALUE;\n    let max = -Number.MAX_VALUE;\n    let len = points.length;\n    for (var i = 0; i < len; i++) {\n        // The magnitude of the projection of the point onto the normal\n        let dot = points[i].dot(normal);\n        if (dot < min)\n            min = dot;\n        if (dot > max)\n            max = dot;\n    }\n    ;\n    result[0] = min;\n    result[1] = max;\n}\n// Check whether two convex polygons are separated by the specified\n// axis (must be a unit vector).\n/**\n * @param {Vector} aPos The position of the first polygon.\n * @param {Vector} bPos The position of the second polygon.\n * @param {Array.<Vector>} aPoints The points in the first polygon.\n * @param {Array.<Vector>} bPoints The points in the second polygon.\n * @param {Vector} axis The axis (unit sized) to test against.  The points of both polygons\n *   will be projected onto this axis.\n * @param {Response=} response A Response object (optional) which will be populated\n *   if the axis is not a separating axis.\n * @return {boolean} true if it is a separating axis, false otherwise.  If false,\n *   and a response is passed in, information about how much overlap and\n *   the direction of the overlap will be populated.\n */\nexport function isSeparatingAxis(aPos, bPos, aPoints, bPoints, axis, response) {\n    let rangeA = T_ARRAYS.pop();\n    let rangeB = T_ARRAYS.pop();\n    // The magnitude of the offset between the two polygons\n    let offsetV = T_VECTORS.pop().copy(bPos).sub(aPos);\n    let projectedOffset = offsetV.dot(axis);\n    // Project the polygons onto the axis.\n    flattenPointsOn(aPoints, axis, rangeA);\n    flattenPointsOn(bPoints, axis, rangeB);\n    // Move B's range to its position relative to A.\n    rangeB[0] += projectedOffset;\n    rangeB[1] += projectedOffset;\n    if (rangeA[0] > rangeB[1] || rangeB[0] > rangeA[1]) {\n        T_VECTORS.push(offsetV);\n        T_ARRAYS.push(rangeA);\n        T_ARRAYS.push(rangeB);\n        return true;\n    }\n    ;\n    // This is not a separating axis. If we're calculating a response, calculate the overlap.\n    if (response) {\n        let overlap = 0;\n        // A starts further left than B\n        if (rangeA[0] < rangeB[0]) {\n            response['aInB'] = false;\n            // A ends before B does. We have to pull A out of B\n            if (rangeA[1] < rangeB[1]) {\n                overlap = rangeA[1] - rangeB[0];\n                response['bInA'] = false;\n                // B is fully inside A.  Pick the shortest way out.\n            }\n            else {\n                let option1 = rangeA[1] - rangeB[0];\n                let option2 = rangeB[1] - rangeA[0];\n                overlap = option1 < option2 ? option1 : -option2;\n            }\n        }\n        else {\n            response['bInA'] = false;\n            // B ends before A ends. We have to push A out of B\n            if (rangeA[1] > rangeB[1]) {\n                overlap = rangeA[0] - rangeB[1];\n                response['aInB'] = false;\n            }\n            else {\n                // A is fully inside B.  Pick the shortest way out.\n                var option1 = rangeA[1] - rangeB[0];\n                var option2 = rangeB[1] - rangeA[0];\n                overlap = option1 < option2 ? option1 : -option2;\n            }\n            ;\n        }\n        // If this is the smallest amount of overlap we've seen so far, set it as the minimum overlap.\n        let absOverlap = Math.abs(overlap);\n        if (absOverlap < response['overlap']) {\n            response['overlap'] = absOverlap;\n            response['overlapN'].copy(axis);\n            if (overlap < 0) {\n                response['overlapN'].reverse();\n            }\n            ;\n        }\n        ;\n    }\n    ;\n    T_VECTORS.push(offsetV);\n    T_ARRAYS.push(rangeA);\n    T_ARRAYS.push(rangeB);\n    return false;\n}\n;\n// Constants for Voronoi regions\n/**\n * @const\n */\nconst LEFT_VORONOI_REGION = -1;\n/**\n * @const\n */\nconst MIDDLE_VORONOI_REGION = 0;\n/**\n * @const\n */\nconst RIGHT_VORONOI_REGION = 1;\n// Calculates which Voronoi region a point is on a line segment.\n// It is assumed that both the line and the point are relative to `(0,0)`\n//\n//            |       (0)      |\n//     (-1)  [S]--------------[E]  (1)\n//            |       (0)      |\n/**\n * @param {Vector} line The line segment.\n * @param {Vector} point The point.\n * @return  {number} LEFT_VORONOI_REGION (-1) if it is the left region,\n *          MIDDLE_VORONOI_REGION (0) if it is the middle region,\n *          RIGHT_VORONOI_REGION (1) if it is the right region.\n */\nfunction voronoiRegion(line, point) {\n    let len2 = line.len2();\n    let dp = point.dot(line);\n    // If the point is beyond the start of the line, it is in the\n    // left voronoi region.\n    if (dp < 0) {\n        return LEFT_VORONOI_REGION;\n        // If the point is beyond the end of the line, it is in the\n        // right voronoi region.\n    }\n    else if (dp > len2) {\n        return RIGHT_VORONOI_REGION;\n        // Otherwise, it's in the middle one.\n    }\n    else {\n        return MIDDLE_VORONOI_REGION;\n    }\n}\n;\n// ## Collision Tests\n// Check if a point is inside a circle.\n/**\n * @param {Vector} p The point to test.\n * @param {Circle} c The circle to test.\n * @return {boolean} true if the point is inside the circle, false if it is not.\n */\nexport function pointInCircle(p, c) {\n    let differenceV = T_VECTORS.pop().copy(p).sub(c['pos']);\n    let radiusSq = c['r'] * c['r'];\n    let distanceSq = differenceV.len2();\n    T_VECTORS.push(differenceV);\n    // If the distance between is smaller than the radius then the point is inside the circle.\n    return distanceSq <= radiusSq;\n}\n// Checks whether polygons collide.\n/**\n * @param {Polygon} a The first polygon.\n * @param {Polygon} b The second polygon.\n * @param {Response=} response Response object (optional) that will be populated if\n *   they interset.\n * @return {boolean} true if they intersect, false if they don't.\n */\nexport function testPolygonPolygon(a, b, response) {\n    let aPoints = a['calcPoints'];\n    let aLen = aPoints.length;\n    let bPoints = b['calcPoints'];\n    let bLen = bPoints.length;\n    // If any of the edge normals of A is a separating axis, no intersection.\n    for (let i = 0; i < aLen; i++) {\n        if (isSeparatingAxis(a['pos'], b['pos'], aPoints, bPoints, a['normals'][i], response)) {\n            return false;\n        }\n        ;\n    }\n    ;\n    for (let i = 0; i < bLen; i++) {\n        if (isSeparatingAxis(a['pos'], b['pos'], aPoints, bPoints, b['normals'][i], response)) {\n            return false;\n        }\n        ;\n    }\n    ;\n    // Since none of the edge normals of A or B are a separating axis, there is an intersection\n    // and we've already calculated the smallest overlap (in isSeparatingAxis).  Calculate the\n    // final overlap vector.\n    if (response) {\n        response['a'] = a;\n        response['b'] = b;\n        response['overlapV'].copy(response['overlapN']).scale(response['overlap']);\n    }\n    return true;\n}\n// Check if a point is inside a convex polygon.\n/**\n * @param {Vector} p The point to test.\n * @param {Polygon} poly The polygon to test.\n * @return {boolean} true if the point is inside the polygon, false if it is not.\n */\nexport function pointInPolygon(p, poly) {\n    TEST_POINT['pos'].copy(p);\n    T_RESPONSE.clear();\n    let result = testPolygonPolygon(TEST_POINT, poly, T_RESPONSE);\n    if (result) {\n        result = T_RESPONSE['aInB'];\n    }\n    ;\n    return result;\n}\n// Check if two circles collide.\n/**\n * @param {Circle} a The first circle.\n * @param {Circle} b The second circle.\n * @param {Response=} response Response object (optional) that will be populated if\n *   the circles intersect.\n * @return {boolean} true if the circles intersect, false if they don't.\n */\nexport function testCircleCircle(a, b, response) {\n    // Check if the distance between the centers of the two\n    // circles is greater than their combined radius.\n    let differenceV = T_VECTORS.pop().copy(b['pos']).sub(a['pos']);\n    let totalRadius = a['r'] + b['r'];\n    let totalRadiusSq = totalRadius * totalRadius;\n    let distanceSq = differenceV.len2();\n    // If the distance is bigger than the combined radius, they don't intersect.\n    if (distanceSq > totalRadiusSq) {\n        T_VECTORS.push(differenceV);\n        return false;\n    }\n    // They intersect.  If we're calculating a response, calculate the overlap.\n    if (response) {\n        let dist = Math.sqrt(distanceSq);\n        response['a'] = a;\n        response['b'] = b;\n        response['overlap'] = totalRadius - dist;\n        response['overlapN'].copy(differenceV.normalize());\n        response['overlapV'].copy(differenceV).scale(response['overlap']);\n        response['aInB'] = a['r'] <= b['r'] && dist <= b['r'] - a['r'];\n        response['bInA'] = b['r'] <= a['r'] && dist <= a['r'] - b['r'];\n    }\n    T_VECTORS.push(differenceV);\n    return true;\n}\n// Check if a polygon and a circle collide.\n/**\n * @param {Polygon} polygon The polygon.\n * @param {Circle} circle The circle.\n * @param {Response=} response Response object (optional) that will be populated if\n *   they interset.\n * @return {boolean} true if they intersect, false if they don't.\n */\nexport function testPolygonCircle(polygon, circle, response) {\n    // Get the position of the circle relative to the polygon.\n    let circlePos = T_VECTORS.pop().copy(circle['pos']).sub(polygon['pos']);\n    let radius = circle['r'];\n    let radius2 = radius * radius;\n    let points = polygon['calcPoints'];\n    let len = points.length;\n    let edge = T_VECTORS.pop();\n    let point = T_VECTORS.pop();\n    // For each edge in the polygon:\n    for (let i = 0; i < len; i++) {\n        let next = i === len - 1 ? 0 : i + 1;\n        let prev = i === 0 ? len - 1 : i - 1;\n        let overlap = 0;\n        let overlapN = null;\n        // Get the edge.\n        edge.copy(polygon['edges'][i]);\n        // Calculate the center of the circle relative to the starting point of the edge.\n        point.copy(circlePos).sub(points[i]);\n        // If the distance between the center of the circle and the point\n        // is bigger than the radius, the polygon is definitely not fully in\n        // the circle.\n        if (response && point.len2() > radius2) {\n            response['aInB'] = false;\n        }\n        // Calculate which Voronoi region the center of the circle is in.\n        var region = voronoiRegion(edge, point);\n        // If it's the left region:\n        if (region === LEFT_VORONOI_REGION) {\n            // We need to make sure we're in the RIGHT_VORONOI_REGION of the previous edge.\n            edge.copy(polygon['edges'][prev]);\n            // Calculate the center of the circle relative the starting point of the previous edge\n            var point2 = T_VECTORS.pop().copy(circlePos).sub(points[prev]);\n            region = voronoiRegion(edge, point2);\n            if (region === RIGHT_VORONOI_REGION) {\n                // It's in the region we want.  Check if the circle intersects the point.\n                var dist = point.len();\n                if (dist > radius) {\n                    // No intersection\n                    T_VECTORS.push(circlePos);\n                    T_VECTORS.push(edge);\n                    T_VECTORS.push(point);\n                    T_VECTORS.push(point2);\n                    return false;\n                }\n                else if (response) {\n                    // It intersects, calculate the overlap.\n                    response['bInA'] = false;\n                    overlapN = point.normalize();\n                    overlap = radius - dist;\n                }\n            }\n            T_VECTORS.push(point2);\n            // If it's the right region:\n        }\n        else if (region === RIGHT_VORONOI_REGION) {\n            // We need to make sure we're in the left region on the next edge\n            edge.copy(polygon['edges'][next]);\n            // Calculate the center of the circle relative to the starting point of the next edge.\n            point.copy(circlePos).sub(points[next]);\n            region = voronoiRegion(edge, point);\n            if (region === LEFT_VORONOI_REGION) {\n                // It's in the region we want.  Check if the circle intersects the point.\n                var dist = point.len();\n                if (dist > radius) {\n                    // No intersection\n                    T_VECTORS.push(circlePos);\n                    T_VECTORS.push(edge);\n                    T_VECTORS.push(point);\n                    return false;\n                }\n                else if (response) {\n                    // It intersects, calculate the overlap.\n                    response['bInA'] = false;\n                    overlapN = point.normalize();\n                    overlap = radius - dist;\n                }\n            }\n            // Otherwise, it's the middle region:\n        }\n        else {\n            // Need to check if the circle is intersecting the edge,\n            // Change the edge into its \"edge normal\".\n            var normal = edge.perp().normalize();\n            // Find the perpendicular distance between the center of the\n            // circle and the edge.\n            var dist = point.dot(normal);\n            var distAbs = Math.abs(dist);\n            // If the circle is on the outside of the edge, there is no intersection.\n            if (dist > 0 && distAbs > radius) {\n                // No intersection\n                T_VECTORS.push(circlePos);\n                T_VECTORS.push(normal);\n                T_VECTORS.push(point);\n                return false;\n            }\n            else if (response) {\n                // It intersects, calculate the overlap.\n                overlapN = normal;\n                overlap = radius - dist;\n                // If the center of the circle is on the outside of the edge, or part of the\n                // circle is on the outside, the circle is not fully inside the polygon.\n                if (dist >= 0 || overlap < 2 * radius) {\n                    response['bInA'] = false;\n                }\n            }\n        }\n        // If this is the smallest overlap we've seen, keep it.\n        // (overlapN may be null if the circle was in the wrong Voronoi region).\n        if (overlapN && response && Math.abs(overlap) < Math.abs(response['overlap'])) {\n            response['overlap'] = overlap;\n            response['overlapN'].copy(overlapN);\n        }\n    }\n    // Calculate the final overlap vector - based on the smallest overlap.\n    if (response) {\n        response['a'] = polygon;\n        response['b'] = circle;\n        response['overlapV'].copy(response['overlapN']).scale(response['overlap']);\n    }\n    T_VECTORS.push(circlePos);\n    T_VECTORS.push(edge);\n    T_VECTORS.push(point);\n    return true;\n}\n// Check if a circle and a polygon collide.\n//\n// **NOTE:** This is slightly less efficient than polygonCircle as it just\n// runs polygonCircle and reverses everything at the end.\n/**\n * @param {Circle} circle The circle.\n * @param {Polygon} polygon The polygon.\n * @param {Response=} response Response object (optional) that will be populated if\n *   they interset.\n * @return {boolean} true if they intersect, false if they don't.\n */\nexport function testCirclePolygon(circle, polygon, response) {\n    // Test the polygon against the circle.\n    var result = testPolygonCircle(polygon, circle, response);\n    if (result && response) {\n        // Swap A and B in the response.\n        var a = response['a'];\n        var aInB = response['aInB'];\n        response['overlapN'].reverse();\n        response['overlapV'].reverse();\n        response['a'] = response['b'];\n        response['b'] = a;\n        response['aInB'] = response['bInA'];\n        response['bInA'] = aInB;\n    }\n    return result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/collision/util.ts","import { Box, Vector, Circle, Polygon } from './math';\nimport Response from './collision/response';\nimport { testCircleCircle, testPolygonCircle, testPolygonPolygon, testCirclePolygon } from './collision/util';\nexport { Box };\nexport { Vector };\nexport { Circle };\nexport { Polygon };\nexport { Response };\nexport { testCircleCircle };\nexport { testPolygonCircle };\nexport { testPolygonPolygon };\nexport { testCirclePolygon };\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import Vector from './vector';\nimport Box from './box';\nexport default class Circle {\n    // ## Circle\n    //\n    // Represents a circle with a position and a radius.\n    // Create a new circle, optionally passing in a position and/or radius. If no position\n    // is given, the circle will be at `(0,0)`. If no radius is provided, the circle will\n    // have a radius of `0`.\n    /**\n     * @param {Vector=} pos A vector representing the position of the center of the circle\n     * @param {?number=} r The radius of the circle\n     * @constructor\n     */\n    constructor(pos = new Vector(), r = 0) {\n        this.pos = pos;\n        this.r = r;\n    }\n    ;\n    // Compute the axis-aligned bounding box (AABB) of this Circle.\n    //\n    // Note: Returns a _new_ `Polygon` each time you call this.\n    /**\n     * @return {Polygon} The AABB\n     */\n    getAABB() {\n        let r = this.r;\n        let corner = this.pos.clone().sub(new Vector(r, r));\n        return new Box(corner, r * 2, r * 2).toPolygon();\n    }\n    ;\n}\n;\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/circle.ts","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/define-property.js\n// module id = 16\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/define-property.js\n// module id = 17\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_a-function.js\n// module id = 18\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_an-object.js\n// module id = 19\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ctx.js\n// module id = 20\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_dom-create.js\n// module id = 21\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_export.js\n// module id = 22\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_has.js\n// module id = 23\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_hide.js\n// module id = 24\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ie8-dom-define.js\n// module id = 25\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_property-desc.js\n// module id = 26\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-primitive.js\n// module id = 27\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.define-property.js\n// module id = 28\n// module chunks = 0"],"sourceRoot":""}